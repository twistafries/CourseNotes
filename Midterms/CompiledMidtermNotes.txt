CSS 
	--->	Cascading StyleSheet
	--->	Developed by Hakom Wium Lie and Bert Bos 
	--->	Used to specify the presentation of structurally marked up documents
	--->	It is a language used to specify the presentation aspects (eg. layout and formating) of structurally marked up documents.
	--->	The language can be applied to any XML document, including plain XML, SVG and XUL, and is applicable to rendering in speech, or on other media.
	--->	Used for describing the presentation of a document written in a markup language. Although most often used to set the visual style of web pages and user interfaces written in HTML and XHTML

Version
	CSS Level 1 
			is a simple style sheet mechanism that allows authors and readers to attach style (e.g. fonts, colors and spacing)
			to HTML documents. The CSS1 language is human readable and writable, and expresses style in common desktop publishing terminology.
	
	CSS Level 2	
			This specification defines Cascading Style Sheets, level 2 (CSS2). CSS2 is a style sheet language that allows authors and users
			to attach style (e.g., fonts, spacing, and aural cues) to structured documents (e.g., HTML documents and XML applications). By separating
			the presentation style of documents from the content of documents, CSS2 simplifies Web authoring and site maintenance.
	
	CSS Level 2 Revision

	CSS Level 3
			is the latest evolution of the Cascading Style Sheets language and aims at extending CSS2.1. It brings a lot of long-awaited novelties,
			like rounded corners, shadows, gradients, transitions or animations, as well as new layouts like multi-columns, flexible box or grid layouts.
			Experimental parts are vendor-prefixed and should either be avoided in production environments, or used with extreme caution as both their
			syntax and semantics can change in the future.


HTML STYLESHEET
	- Sources of styles for HTML Documents

	--> Author styles
		This refers to the maker of the website who embeds all the styles of a website in CSS files or inline into the html.
			
			- External stylesheet
			- Embedded stylesheet
			- Inline styles
	
	--> Users styles
		-This refers to you or the end-user viewing a website.
		-You can override the author's styles by defining your own styles or CSS. Typically this is done if you need to have larger font sizes, varying colors, etc. for accessibility reasons.
		-Some browsers provide alternatives through plugins/extensions
	
	--> User agent styles
		-This style sheet refers to your browser such as Internet Explorer,Chrome,Firefox or any other browser. It has its own default style sheet and has the lowest priority.
		-Sample default user


CSS STATEMENTS

	CSS Rules Set
			- Consist of selector
			- Declaration block
			- Property declaration

	CSS RULE Precedence
 		- an element may be the subject of the selectors of multiple style rules
 		- when such rules target diferent properties their effects cascade
 		- when the styles involve the same property conflict and must be resolved such that only one style is copied.

 	RESOLUTION 

 	Origin and Importance (author, user, user agent)
		- Origin of declaration is base on where it came from 
		- Importance is whether or not it is declared descending

		1. Transition decalarations
		2. Important user agent declarations
		3. Important user declarations
		4. Important override declarations
		5. Important author declarations
		6. Animation declarations
		7. Normal override declarations
		8. Normal author declarations
		9. Normal user declarations
		10. Normal user agent declarations 

	By specifity
	By order


	Css selectors
			Selectors 
			- Structure used as a condition
			Selector Group
 			- comma-separated list of selectors representing


 	Simple Selector
			- Universal selector
					This uses an asterisk (*) to refer to any type of a particular element.The universal selector matches any element type.

			- Type selector
					This selects elements of the document by node names.
			- ID selector
					This selects elements that match based on id attribute.
			- Class selectors
					This selects elements that match based on class attribute.
			- Attribute selectors
					Selects elements based on attributes or its values.
			- Pseudo classes
	
	Selector group - comma separated list representing the union
	
	Combinators
			- Descendant combinator
					Nodes that are children or children of children and so on of specified element are selected.
			- Child combinator (>
					Nodes that are children of element specified are selected.
			- Sibling combinator
						- General sibling (+)
								Nodes that follows element specified are selected.	
						- Adjacent sibling (~)
								Nodes that immediately follows element specified are selected.
				
	Pseudo classes
		
		- Dynamic pseudo-class
		
				- link pseudo-classes
					:link - selects hyperlink elements that have href attribute.
					:visited - links already visited are selected.
				
				- user action pseudo classes
					:hover - selected as mouse hovers an element.
					:active - selects elements usually links as they are activated.
					:focus  - select as an element is focused by keyboard.
		
		- Target pseudo-class
		- Language pseudo-classes
		
		- UI element states pseudo classes
				:enabled , :disabled
		
		- Structural pseudo-classes
				:root 

		-Negation pseudo-class
				:not()

	Pseudo elements
		:first-letter
		:first-line
		:before
		:after


CSS Declarations
 Properties
	-shorthand properties
	   - allows authors to specify the values of several properties with a single property
		-background, font, margin, padding, border-width
	-vendor specific extentions(a.k.a vendor prefixes)
	   - used by browser vendors as a prefix for the names of experimental or non-standard css properties. Lately, vendors are moving away from vendor prefixes in favor of user-controlled flags or preferences
	    eg. -webkit-
		-moz-
		-o-
		-ms-
	-custom properties(a.k.a css variables experimental)
	  - property names prefixed with - , representing a value that can be relesed throughout the document using the var() function

Values
 - values processing
	- declared , cascaded
 - the final values can be either absolute or relative computing


